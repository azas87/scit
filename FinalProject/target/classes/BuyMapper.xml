<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.kay87.team.dao.BuyMapper">
	
<!-- 검색한 생선리스트 가져오기 -->
	<select id="getFishName" parameterType="string" resultType="FishList">
		
		select * from fishList
		where fishName LIKE '%' || #{search} || '%'
	
	</select>
	
<!-- 구매글 올리기	 -->
	<insert id="insertBuyList" parameterType="BuyList">
	
		insert into buyList
		(
			buyNum,
			fishName,
			buyerId,
			registDate,
			uploadDate,
			deadline,
			weight,
			saleStatus,
			price,
			successSellerId,
			buyListComment,
			location
		)
		values
		(
			buyNum.nextval,
			#{fishName},
			#{buyerId},
			#{registDate},
			#{uploadDate},
			#{deadline},
			#{weight},
			#{saleStatus},
			#{price},
			#{successSellerId},
			#{buyListComment},
			#{location}
		)

	</insert>
	
	<!-- 사용자의 판매이력 가져오기(중복된 판매자는 제외) 
	판매자 우선순위를 위해-->
	<select id="getHistorySellerId" parameterType="string" resultType="BuyList">
		
		SELECT * FROM buyList 
 		WHERE ROWID IN(SELECT MAX(ROWID) FROM buyList 
 		where buyerid = #{id}
 		GROUP BY successsellerId) 
 		and successsellerId is not null
 		
	</select>
	
	<!-- 구매이력 가져오기 -->
	<select id="getSuccessBuyList" parameterType="map" resultType="BuyList">
	
			SELECT
				buyNum,
				fishName,
				buyerId,
				registDate,
				uploadDate,
				deadline,
				weight,
				saleStatus,
				price,
				successSellerId,
				buyListComment,
				location 
			FROM 
				buyList
				
			WHERE buyerId = #{id}
			
			AND 
                saleStatus !='onSale' and saleStatus !='refund'
   			<if test="period !=null and period=='1week'">
            AND 
            	deadline >= sysdate-7
            </if>
            <if test="period !=null and period=='3week'">
            AND 
            	deadline >= sysdate-21
            </if>
            <if test="period !=null and period=='1month'">
            AND 
            	deadline >= sysdate-30
            </if>
             <if test="period !=null and period=='1year'">
            AND 
            	deadline >= sysdate-365
            </if>
	
	</select>
	
	<!-- 환불이력가져오기 -->
	<select id="getRefundsBuyList" parameterType="string" resultType="BuyList">
	
			SELECT
				buyNum,
				fishName,
				buyerId,
				registDate,
				uploadDate,
				deadline,
				weight,
				saleStatus,
				price,
				successSellerId,
				buyListComment,
				location 
			FROM 
				buyList
				
			WHERE buyerId = #{search}
			
			and 
                saleStatus ='refund'
	</select>

	
<!--전체구매리스트,검색은 없음-->	
	<select id="allBuyList" resultType="BuyList" >
		select 
			*
		from 
			BuyList
		where			
			saleStatus = 'onSale'
		order by buyNum asc
	</select>
	
	
	
<!--나의구매리스트, 검색은 없음 -->		
	<select id="myBuyList" resultType="BuyList" parameterType="string">
		select 
			b.buyNum,
			fishName,
			buyerId,
			registDate,
			uploadDate,
			deadline,
			weight,
			saleStatus,
			price,
			s.sellerid as successSellerId,
			buyListComment,
			location 
		from BuyList b, SaleList s
		where b.buynum=s.buynum 
		and buyerId = #{buyerId}
		and saleStatus = 'onSale'	
		order by buyNum asc			
	</select>	
	
	<!-- <select id="mygetTotal" resultType="int" parameterType="string">
		select count(*) from BuyList
		where		
			buyerId = #{buyerId}		
	</select>
	 -->
	

	<select id="GetTotalListCount" resultType="int" parameterType="string">
		SELECT COUNT(*) FROM buyList <if test="_parameter != null"> WHERE buyerId = #{search}  </if>
	</select>
	
	<select id="GetTotalRefundListCount" resultType="int" parameterType="string">
		SELECT COUNT(*) FROM buyList <if test="_parameter != null"> WHERE buyerId = #{search}  </if>
		AND saleStatus = 'refund'
	</select>
	
	<!-- 생선별 구매 합계 -->
	<select id="sumPricebyFishName" parameterType="map" resultType="BuyList">
		SELECT SUM(price) as price ,fishName
			FROM 
				buyList
	 		where 
	 			buyerid = #{id}
	 		and 
                saleStatus !='onSale' and saleStatus !='refund'
            <if test="period !=null and period=='1week'">
            AND 
            	deadline >= sysdate-7
            </if>
            <if test="period !=null and period=='3week'">
            AND 
            	deadline >= sysdate-21
            </if>
            <if test="period !=null and period=='1month'">
            AND 
            	deadline >= sysdate-30
            </if>
             <if test="period !=null and period=='1year'">
            AND 
            	deadline >= sysdate-365
            </if>
            
            group by 
                fishName
    </select>
    
    <!-- 월별 구매합계 -->
    <select id="sumPricebyMonth" parameterType="string" resultType="BuyList">
		select
   			 to_char(deadline, 'MM') as fishName, sum(price) as price
		from
    		buylist
		where 
    		to_char(deadline, 'YYYYMMDD') between sysdate-365 and sysdate
		and
   			buyerid = #{id}
		and 
		    saleStatus !='onSale' and saleStatus !='refund'
		group by 
		    to_char(deadline, 'MM')
		order by
 		   fishName
    </select>
    
    <!-- 수취확인 -->
	<update id="saleComplete" parameterType="string">
 
  	 	UPDATE buylist
     	SET saleStatus = 'saleComplete'
    	WHERE buyNum = #{buyNum}

	</update>
	
	<update id="refund" parameterType="string">
 
  	 	UPDATE buylist
     	SET saleStatus = 'refund'
    	WHERE buyNum = #{buyNum}

	</update>
<!-- 	
	  <select id="selectBestseller" resultType="hashmap">
   	SELECT
   		b.bookcode,
   		b.title,
   		b.price,
   		s.purchasecnt
   	FROM
   		book b, sale s
   	WHERE
   		b.bookcode=s.bookcode
   	AND
   		s.purchasecnt
   	IN (
   		SELECT
   			MAX(purchasecnt)
   		FROM
   			sale
   	)
   </select> -->
	
</mapper>